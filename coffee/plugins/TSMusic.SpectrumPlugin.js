// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  TSMusic.SpectrumPlugin = (function(_super) {
    __extends(SpectrumPlugin, _super);

    SpectrumPlugin.type = "spectrum";

    SpectrumPlugin.events = {
      update: "on_update"
    };

    function SpectrumPlugin(name) {
      var _this = this;

      SpectrumPlugin.__super__.constructor.call(this, name);
      this.div = document.getElementById("spectrum-div");
      this.canvas = document.getElementById("spectrum");
      this.context = this.canvas.getContext("2d");
      this.visible_btn = document.getElementById("spectrum-visible");
      this.frequency = new Uint8Array(60);
      this.visible = true;
      this.visible_btn.onclick = function() {
        if (_this.visible) {
          return _this.hide();
        } else {
          return _this.show();
        }
      };
    }

    SpectrumPlugin.prototype._init = function() {
      this.visible_btn.style.display = "";
      return this.show();
    };

    SpectrumPlugin.prototype._uninit = function() {
      this.visible_btn.style.display = "none";
      return this.hide();
    };

    SpectrumPlugin.prototype.show = function() {
      this.div.style.display = "";
      this.visible = true;
      return this.visible_btn.value = "关闭频谱";
    };

    SpectrumPlugin.prototype.hide = function() {
      this.div.style.display = "none";
      this.visible = false;
      return this.visible_btn.value = "打开频谱";
    };

    SpectrumPlugin.prototype.on_update = function() {
      var index, value, _i, _len, _ref, _results;

      if (this.visible) {
        this.context.clearRect(0, 0, 300, 64);
        this.widget.audio_analyser.getByteFrequencyData(this.frequency);
        _ref = this.frequency;
        _results = [];
        for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
          value = _ref[index];
          value = value / 4;
          _results.push(this.context.fillRect(index * 5, 64 - value, 4, value));
        }
        return _results;
      }
    };

    return SpectrumPlugin;

  })(TSMusic.Plugin);

}).call(this);
